import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class Party
{
	public double averageNames(int n, int[] personA, int[] personB)
	{
		HashSet<Integer> setArray[] = new HashSet<Integer>[n];
		for(int i = 0 ; i < n ; i++){
			setArray[i] = new HashSet<Integer>();
		}
		for(int i = 0 ; i < personA.length ; i++){
			int a = personA[i];
			int b = personB[i];
			setArray[a].add(b);
			setArray[b].add(a);
			Iterator it = setArray[a].iterator();
			while(it.hasNext()){
				int c  = it.next();
				if(c==b)
					continue;
				setArray[b].add(c);
			}
			Iterator it = setArray[b].iterator();
			while(it.hasNext()){
				int c  = it.next();
				if(c==a)
					continue;
				setArray[a].add(c);
			}
		}
		double ans = 0;
		for(int i = 0 ; i < setArray.length ; i++){
			ans+=setArray[i].size();
		}
		ans=ans*1.0/n;
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, double p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Party obj;
		double answer;
		obj = new Party();
		long startTime = System.currentTimeMillis();
		answer = obj.averageNames(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p3 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p3));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		double p3;
		
		// ----- test 0 -----
		p0 = 4;
		p1 = new int[]{0,1,2};
		p2 = new int[]{1,2,3};
		p3 = 2.25D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 5;
		p1 = new int[]{0,0,0,0,0,0,0};
		p2 = new int[]{1,2,3,4,3,2,1};
		p3 = 4.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 100;
		p1 = new int[]{52,19,52,19};
		p2 = new int[]{19,52,19,52};
		p3 = 0.02D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 25;
		p1 = new int[]{14,14,16,4,14,16,2,16,8,15,17,17,3,3,19,17,20,4,24,8};
		p2 = new int[]{16,2,23,16,11,8,5,19,15,20,19,18,14,12,22,9,0,7,23,10};
		p3 = 4.44D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
