import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class RunLengthEncoding
{
	public String decode(String text)
	{
		String res="";
		for(int i = 0 ; i< text.length() ; i++){
			char x = text.charAt(i);
			if(Character.isAlphabetic(x)){
				res+=x;
				continue;
			}
			else if(Character.isDigit(x)){
				if(Character.isAlphabetic(text.charAt(i+1))){
					String temp = x+"";
					res+=concat(text.charAt(i+1),temp);
					i++;
					continue;
				}
				else if(Character.isAlphabetic(text.charAt(i+2))){
					String temp = ""+x+text.charAt(i+1);
					res+=concat(text.charAt(i+2),temp);
					i+=2;
					continue;
				}
				else{
					return "TOO LONG";
				}
			}
			else{
				
			}
		}
		if(res.length()<=50)
		return res;
		else 
			return "TOO LONG";
	}
	public static String concat(char x,String d){
		int p = Integer.parseInt(d);
		String str = "";
		for(int i = 0 ; i < p ; i++){
			str+=x;
		}
		return str;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		RunLengthEncoding obj;
		String answer;
		obj = new RunLengthEncoding();
		long startTime = System.currentTimeMillis();
		answer = obj.decode(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		p0 = "4A3BC2DE";
		p1 = "AAAABBBCDDE";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "1A1B1C1D1E";
		p1 = "ABCDE";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "1A3A5A4BCCCC";
		p1 = "AAAAAAAAABBBBCCCC";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "50A";
		p1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "21Z13S9A8M";
		p1 = "TOO LONG";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "123456789012345678901234567890B";
		p1 = "TOO LONG";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
