#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class BiconnectedDiv2 {
public:
	int minimize(vector <int>, vector <int>);
};

int BiconnectedDiv2::minimize(vector <int> w1, vector <int> w2) {
	int sum=0;
	for(int i = 0 ; i< w1.size() ; i++)
	sum+=w1[i];
	for(int i = 0 ; i<w2.size() ; i++)
	sum+=w2[i];
	for(int i = 0 ; i<w1.size() ; i++)
	if(i!=0 && i!=w1.size()-1 && w1[i]>0)
	sum-=w1[i];
	return sum;
}

<%:testing-code%>
//Powered by [KawigiEdit] 2.0!
