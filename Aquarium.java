import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class Aquarium
{
	public int peaceful(int minSize, int maxSize, int[] fishSizes)
	{
		boolean cantlive[] = new boolean[10005];
		for(int i = 0 ; i < fishSizes.length ; i++){
			int temp1,temp2;
			temp1 = (int) Math.floor(fishSizes[i]/10);
			temp2 = (int) Math.ceil(fishSizes[i]/2);
			for(int j = temp1 ; j <=temp2 ; j++)
				if(j*2 <= fishSizes[i] && j*10>=fishSizes[i])
				cantlive[j]=true;
			temp1 = (int) Math.round(fishSizes[i]*1.0*2);
			temp2 = (int) Math.round(fishSizes[i]*1.0*10);
			for(int j = temp1 ; j <= temp2 ; j++)
				cantlive[j]=true;
			
		}
		int count=0;
		for(int i = minSize ; i<=maxSize ; i++){
			if(!cantlive[i])
				count++;
		}
		return count;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Aquarium obj;
		int answer;
		obj = new Aquarium();
		long startTime = System.currentTimeMillis();
		answer = obj.peaceful(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int[] p2;
		int p3;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 12;
		p2 = new int[]{1};
		p3 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 1;
		p1 = 36;
		p2 = new int[]{3};
		p3 = 10;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1;
		p1 = 1000;
		p2 = new int[]{10,100,500};
		p3 = 4;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 5;
		p1 = 880;
		p2 = new int[]{1,3,9,27,243,729};
		p3 = 121;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 3;
		p1 = 997;
		p2 = new int[]{10,11,12,13,14,16,82,83,84,85,720,730,740,750,760,770};
		p3 = 147;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 2;
		p1 = 999;
		p2 = new int[]{941,797,120,45,7,120};
		p3 = 10;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = 1;
		p1 = 791;
		p2 = new int[]{1,4,12,25,79,556,625,800,801,950,952,954,956,958,980,1000};
		p3 = 1;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
