int SortingGame::fewestMoves(vector <int> board, int k) {
		map< vector<int> , int> m;
	queue< vector<int> > q;
	q.push(board);
	m.insert(make_pair(board,0));
	while(!q.empty()){
		vector<int > u  = q.front();
		q.pop();
		int d = m[u];
		int i;
		for(i = 1 ; i < board.size() ;i++)
		if(u[i-1]>u[i])
		break;
		if(i==board.size())
		return d;
		for(int i = 0 ; i<=board.size()-k ; i++){
			vector<int> w=u;
			reverse(w.begin()+i,w.begin()+i+k);
			if(m.count(w)==0){
				m[w]=d+1;
				q.push(w);
			}
		}
	}
	return -1;
}
